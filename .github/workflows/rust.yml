name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build the docker-compose stack
      run: docker-compose up -d
    - name: Cache cargo registry
      uses: actions/cache@v1
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo index
      uses: actions/cache@v1
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo build
      uses: actions/cache@v1
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    - name: Stable with rustfmt and clippy
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: rustfmt, clippy
    - uses: actions-rs/install@v0.1
      with:
        crate: sqlx-cli
        version: 0.1.0-beta.1
        use-tool-cache: true
    - name: Migrate
      uses: actions-rs/cargo@v1
      with:
        command: sqlx migrate run
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost
    - name: Annotate commit with clippy warnings
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost
    - name: Run cargo fmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
